//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChienVHShopOnline.Models
{
    using System;
    using Microsoft.EntityFrameworkCore;

    public partial class ChienVHShopDBEntities : DbContext
    {
        // "name=ChienVHShopDBEntities"
        // public ChienVHShopDBEntities()
        //     : base()
        // {
        // }

        public ChienVHShopDBEntities(DbContextOptions contextOptions) : base(contextOptions)
        {

        }

        // protected override void OnModelCreating(DbModelBuilder modelBuilder)
        // {
        //     throw new UnintentionalCodeFirstException();
        // }

        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<Model> Models { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<ContactU> ContactUs { get; set; }


        // protected override void OnModelCreating(ModelBuilder modelBuilder)
        // {
        //     base.OnModelCreating(modelBuilder);

        //     modelBuilder.Entity<Product>()
        //         .HasOne(p => p.Model)
        //         .WithMany()
        //         .HasForeignKey(p => p.ModelId)
        //         .OnDelete(DeleteBehavior.SetNull);

        //     modelBuilder.Entity<Product>()
        //         .HasOne(p => p.Category)
        //         .WithMany()
        //         .HasForeignKey(p => p.CategoryId)
        //         .OnDelete(DeleteBehavior.SetNull);

        //     modelBuilder.Entity<Product>()
        //         .HasOne(p => p.Color)
        //         .WithMany()
        //         .HasForeignKey(p => p.ColorId)
        //         .OnDelete(DeleteBehavior.SetNull);

        //     modelBuilder.Entity<Product>()
        //         .HasOne(p => p.User)
        //         .WithMany()
        //         .HasForeignKey(p => p.UserId)
        //         .OnDelete(DeleteBehavior.SetNull);

        //     modelBuilder.Entity<News>()
        //         .HasOne(p => p.User)
        //         .WithMany()
        //         .HasForeignKey(p => p.UserId)
        //         .OnDelete(DeleteBehavior.SetNull);


            
        // }

    }
}
